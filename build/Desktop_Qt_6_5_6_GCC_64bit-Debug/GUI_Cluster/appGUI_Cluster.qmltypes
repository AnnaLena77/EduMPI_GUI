import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "cluster_node.h"
        name: "Cluster_Node"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["GUI_Cluster/Cluster_Node 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "count"; type: "int"; read: "count"; index: 0; isReadonly: true; isConstant: true }
        Signal { name: "ranksChanged" }
        Signal { name: "timestampsChanged" }
        Method {
            name: "rankAt"
            type: "Cluster_Rank"
            isPointer: true
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "getName"; type: "QString" }
    }
    Component {
        file: "cluster_rank.h"
        name: "Cluster_Rank"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["GUI_Cluster/Cluster_Rank 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "p2p_send_datasize"
            type: "long"
            read: "p2p_send_datasize"
            write: "set_p2p_sendDatasize"
            notify: "send_p2p_datasizeChanged"
            index: 0
        }
        Property {
            name: "p2p_recv_datasize"
            type: "long"
            read: "p2p_recv_datasize"
            write: "set_p2p_recvDatasize"
            notify: "recv_p2p_datasizeChanged"
            index: 1
        }
        Property {
            name: "coll_send_datasize"
            type: "long"
            read: "coll_send_datasize"
            write: "set_coll_sendDatasize"
            notify: "send_coll_datasizeChanged"
            index: 2
        }
        Property {
            name: "coll_recv_datasize"
            type: "long"
            read: "coll_recv_datasize"
            write: "set_coll_recvDatasize"
            notify: "recv_coll_datasizeChanged"
            index: 3
        }
        Signal { name: "send_p2p_datasizeChanged" }
        Signal { name: "recv_p2p_datasizeChanged" }
        Signal { name: "send_coll_datasizeChanged" }
        Signal { name: "recv_coll_datasizeChanged" }
        Method { name: "getId"; type: "int" }
    }
    Component {
        file: "database_connection.h"
        name: "Database_Connection"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["GUI_Cluster/Database_Connection 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "count"; type: "int"; read: "count"; index: 0; isReadonly: true; isConstant: true }
        Property {
            name: "p2p_send_max"
            type: "long"
            read: "p2p_send_max"
            write: "set_p2p_send_max"
            notify: "p2p_send_max_changed"
            index: 1
        }
        Property {
            name: "coll_send_max"
            type: "long"
            read: "coll_send_max"
            write: "set_coll_send_max"
            notify: "coll_send_max_changed"
            index: 2
        }
        Property {
            name: "p2p_recv_max"
            type: "long"
            read: "p2p_recv_max"
            write: "set_p2p_recv_max"
            notify: "p2p_recv_max_changed"
            index: 3
        }
        Property {
            name: "coll_recv_max"
            type: "long"
            read: "coll_recv_max"
            write: "set_coll_recv_max"
            notify: "coll_recv_max_changed"
            index: 4
        }
        Property { name: "db_connection"; type: "bool"; notify: "connectionChanged"; index: 5 }
        Property {
            name: "cluster_connection"
            type: "bool"
            notify: "clusterConnectionChanged"
            index: 6
        }
        Property { name: "time_display"; type: "int"; notify: "time_display_changed"; index: 7 }
        Signal { name: "p2p_send_max_changed" }
        Signal { name: "coll_send_max_changed" }
        Signal { name: "p2p_recv_max_changed" }
        Signal { name: "coll_recv_max_changed" }
        Signal { name: "connectionChanged" }
        Signal { name: "clusterConnectionChanged" }
        Signal { name: "time_display_changed" }
        Signal { name: "componentsBuilt" }
        Signal {
            name: "connectionSignal"
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "dataIn"
            Parameter { name: "timestamp"; type: "int" }
        }
        Signal {
            name: "signalSlurmStatusChanged"
            Parameter { name: "status"; type: "QString" }
        }
        Signal {
            name: "copiedOutputFile"
            Parameter { name: "output"; type: "QString" }
        }
        Signal {
            name: "signalToConnect"
            Parameter { type: "QString" }
            Parameter { type: "QString" }
            Parameter { type: "int" }
            Parameter { type: "QString" }
            Parameter { type: "QString" }
        }
        Signal {
            name: "setProcNum"
            Parameter { name: "proc_num"; type: "int" }
        }
        Signal {
            name: "signalToUpdateData"
            Parameter { type: "int" }
        }
        Signal { name: "signalToClearDB" }
        Signal {
            name: "signalToShowTimestampData"
            Parameter { name: "timestampA"; type: "QTime" }
            Parameter { name: "timestampB"; type: "QTime" }
        }
        Method {
            name: "dbConnectionSuccessful"
            Parameter { type: "bool" }
        }
        Method {
            name: "buildClusterComponents"
            Parameter { type: "QMap<QString,QList<int>>" }
        }
        Method {
            name: "updateDataToUI"
            Parameter { type: "DataColumn"; isList: true }
        }
        Method { name: "removeClusterComponents" }
        Method {
            name: "handleTimestamp"
            Parameter { name: "timestamp"; type: "QTime" }
        }
        Method {
            name: "slurm_status_changed"
            Parameter { name: "status"; type: "QString" }
        }
        Method {
            name: "getSlurmID"
            Parameter { name: "id"; type: "int" }
        }
        Method {
            name: "connect"
            Parameter { name: "hostname"; type: "QString" }
            Parameter { name: "databasename"; type: "QString" }
            Parameter { name: "port"; type: "int" }
            Parameter { name: "UserName"; type: "QString" }
            Parameter { name: "password"; type: "QString" }
        }
        Method {
            name: "writeLocalBashFile"
            Parameter { name: "local_path"; type: "QString" }
            Parameter { name: "file"; type: "bool" }
            Parameter { name: "proc_num"; type: "int" }
        }
        Method { name: "closeApp" }
        Method { name: "cancelRunningJob" }
        Method {
            name: "startBash"
            Parameter { name: "proc_num"; type: "int" }
        }
        Method { name: "readBash"; type: "QString" }
        Method {
            name: "writeBash"
            Parameter { name: "content"; type: "QString" }
        }
        Method {
            name: "checkFile"
            type: "bool"
            Parameter { name: "source"; type: "QString" }
            Parameter { name: "program"; type: "QString" }
            Parameter { name: "file"; type: "bool" }
        }
        Method {
            name: "writeRemoteBashFile"
            Parameter { name: "program_name"; type: "QString" }
            Parameter { name: "proc_num"; type: "int" }
            Parameter { name: "visualization"; type: "bool" }
        }
        Method {
            name: "showConditionAt"
            Parameter { name: "timeSecondsA"; type: "int" }
            Parameter { name: "timeSecondsB"; type: "int" }
        }
        Method {
            name: "startAndStop"
            Parameter { name: "start"; type: "bool" }
        }
        Method {
            name: "connectCluster"
            type: "QString"
            Parameter { name: "address"; type: "QString" }
            Parameter { name: "ident"; type: "QString" }
            Parameter { name: "path"; type: "QString" }
        }
        Method {
            name: "connectClusterAsync"
            Parameter { name: "address"; type: "QString" }
            Parameter { name: "ident"; type: "QString" }
            Parameter { name: "path"; type: "QString" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "nodeAt"
            type: "Cluster_Node"
            isPointer: true
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "nodes_instances.h"
        name: "Nodes_Instances"
        accessSemantics: "reference"
        prototype: "QQuick3DInstancing"
        exports: ["GUI_Cluster/Nodes_Instances 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "instanceCount"
            type: "int"
            read: "instanceCount"
            write: "setInstanceCount"
            notify: "instanceCountChanged"
            index: 0
        }
        Signal { name: "instanceCountChanged" }
        Method {
            name: "setInstanceCount"
            Parameter { name: "count"; type: "int" }
        }
    }
    Component {
        file: "ranks_instances.h"
        name: "Ranks_Instances"
        accessSemantics: "reference"
        prototype: "QQuick3DInstancing"
        exports: ["GUI_Cluster/Ranks_Instances 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "instanceCount"
            type: "int"
            read: "instanceCount"
            write: "setInstanceCount"
            notify: "instanceCountChanged"
            index: 0
        }
        Property {
            name: "outerCubeLength"
            type: "int"
            read: "outerCubeLength"
            write: "setOuterCubeLength"
            notify: "outerCubeLengthChanged"
            index: 1
        }
        Property {
            name: "innerCubeCount"
            type: "int"
            read: "innerCubeCount"
            write: "setInnerCubeCount"
            notify: "innerCubeCountChanged"
            index: 2
        }
        Property {
            name: "innerCubeSpacing"
            type: "double"
            read: "innerCubeSpacing"
            write: "setInnerCubeSpacing"
            notify: "innerCubeSpacingChanged"
            index: 3
        }
        Property {
            name: "rowsColumns"
            type: "int"
            read: "rowsColumns"
            write: "setRowsColumns"
            notify: "rowsColumnsChanged"
            index: 4
        }
        Property {
            name: "innerCubeScale"
            type: "double"
            read: "innerCubeScale"
            write: "setInnerCubeScale"
            notify: "innerCubeScaleChanged"
            index: 5
        }
        Property {
            name: "send_datasize"
            type: "long"
            read: "send_datasize"
            write: "set_sendDatasize"
            notify: "send_datasizeChanged"
            index: 6
        }
        Property {
            name: "p2p_show"
            type: "bool"
            read: "p2p_show"
            write: "set_p2pBool"
            notify: "p2pBoolChanged"
            index: 7
        }
        Property {
            name: "coll_show"
            type: "bool"
            read: "coll_show"
            write: "set_collBool"
            notify: "collBoolChanged"
            index: 8
        }
        Property { name: "combobox"; type: "QString"; notify: "combobox_optionChanged"; index: 9 }
        Property {
            name: "nodes"
            type: "Database_Connection"
            isPointer: true
            notify: "nodesChanged"
            index: 10
        }
        Property {
            name: "instanceRanks"
            type: "Cluster_Node"
            isPointer: true
            read: "instanceRanks"
            write: "setInstanceRanks"
            notify: "instanceRanksChanged"
            index: 11
        }
        Signal { name: "instanceCountChanged" }
        Signal { name: "outerCubeLengthChanged" }
        Signal { name: "innerCubeCountChanged" }
        Signal { name: "innerCubeSpacingChanged" }
        Signal { name: "rowsColumnsChanged" }
        Signal { name: "innerCubeScaleChanged" }
        Signal { name: "instanceRanksChanged" }
        Signal { name: "send_datasizeChanged" }
        Signal { name: "nodesChanged" }
        Signal { name: "p2pBoolChanged" }
        Signal { name: "collBoolChanged" }
        Signal { name: "combobox_optionChanged" }
        Method {
            name: "setInstanceCount"
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "setOuterCubeLength"
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "setInnerCubeCount"
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "setInnerCubeSpacing"
            Parameter { name: "spacing"; type: "double" }
        }
        Method {
            name: "setRowsColumns"
            Parameter { name: "rowsColums"; type: "int" }
        }
        Method {
            name: "setInnerCubeScale"
            Parameter { name: "scale"; type: "double" }
        }
        Method {
            name: "setInstanceRanks"
            Parameter { name: "ranks"; type: "Cluster_Node"; isPointer: true }
        }
        Method {
            name: "set_sendDatasize"
            Parameter { name: "ds"; type: "long" }
        }
        Method {
            name: "set_p2pBool"
            Parameter { name: "show"; type: "bool" }
        }
        Method {
            name: "set_collBool"
            Parameter { name: "show"; type: "bool" }
        }
    }
}
